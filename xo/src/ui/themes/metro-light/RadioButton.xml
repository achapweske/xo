<Style x:ref="RadioButton">
	<Style.definitions>
		<Dictionary x:source="./definitions.xml" />
	</Style.definitions>
	<Property name="foreground" value="@foregroundColor" />
	<Property name="fontFamily" value="@controlFontFamily" />
	<Property name="fontSize" value="@controlFontSize" />
	<Property name="horizontalContentAlignment" value="left" />
	<Property name="verticalContentAlignment" value="middle" />
	<Property name="padding" value="0 0 0 6" />
	<Property name="minWidth" value="30" />
	<Property name="minHeight" value="30" />
	<Property name="borderWidth" value="1" />
	<Property name="template">
		<Template>
			<Grid>
				<Grid.columns>
					<Column width="30" />
					<Column />
				</Grid.columns>
				<Grid 
					id="box" 
					width="18" 
					height="18" 
					horizontalAlignment="center"
					verticalAlignment="middle"
					background="@radioButtonBackgroundColor" 
					borderColor="@radioButtonBorderColor" 
					borderWidth="1"
					borderRadius="9">
					<Ellipse 
						id="check" 
						width="10" 
						height="10" 
						horizontalAlignment="center"
						verticalAlignment="middle"
						fill="none" />
				</Grid>
				<ContentPresenter 
					Grid.column="1"
					margin="{control.padding}" 
					horizontalAlignment="{control.horizontalContentAlignment}" 
					verticalAlignment="{control.verticalContentAlignment}" 
					content="{control.content}" 
					contentTemplate="{control.contentTemplate}" 
					contentTemplateSelector="{control.contentTemplateSelector}" />
			</Grid>
			<StateManager.stateGroups>
				<StateGroup id="state">
					<State name="mouseOver" value="{control.isMouseOver}">
						<Property target="{box}" name="background" value="@radioButtonHoverBackgroundColor" />
						<Property target="{box}" name="borderColor" value="@radioButtonHoverBorderColor" />
					</State>
					<State name="pressed" value="{control.isPressed}">
						<Property target="{box}" name="background" value="@radioButtonPressedBackgroundColor" />
						<Property target="{box}" name="borderColor" value="@radioButtonPressedBorderColor" />
					</State>
				</StateGroup>
				<StateGroup id="checkedState">
					<State name="checked" value="{control.isChecked}">
						<Property target="{check}" name="fill" value="@radioButtonCheckBackgroundColor" />
					</State>
				</StateGroup>
			</StateManager.stateGroups>			
		</Template>
	</Property>
</Style>